# 6. Реализовать два небольших скрипта:
# а) итератор, генерирующий целые числа, начиная с указанного,
# б) итератор, повторяющий элементы некоторого списка, определенного заранее.

# Подсказка: использовать функцию count() и cycle() модуля itertools.
# Обратите внимание, что создаваемый цикл не должен быть бесконечным. Необходимо предусмотреть условие его завершения.

# Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
# Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.

# Вариант А
from itertools import count  # импорт count из модуля itertools

print("***** а) Итератор, генерирующий целые числа, начиная с указанного ***** ")
user_number = int(input("Введите число от 1 до 10 >>>> "))  # ввод пользователем числа

for el in count(user_number):  # цикл, функция count() модуля itertools создает бесконечный итератор
    if el > 15:  # если значение больше 15, то
        break  # прервать цикл
    else:  # иначе
        print(el, end=' ')  # вывод значения, end=' ' позволяет записать значения в строку через пробел

# Вариант Б
from itertools import cycle # импорт cycle из модуля itertools

print(end='\n')
print(f"***** б) Итератор, повторяющий элементы некоторого списка, определенного заранее ***** ")
user_list = [el for el in range(1, 21) if el % 2 == 0] # генератор списка
print(f"Сгенерированный список: {user_list}") # вывод списка

сount = 0 # счетчик итераций
for el in cycle(user_list): # цикл, функция cycle() создает итератор для формирования бесконечного цикла набора значения
    if сount < len(user_list): # если значение меньше длины списка,то
        print(el, end=' ') # вывод значения, end=' ' позволяет записать значения в строку через пробел
        сount += 1
    else: # иначе
        break # стоп

